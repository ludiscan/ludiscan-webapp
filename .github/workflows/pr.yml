name: pr.yml
on:
  pull_request:
    paths:
      - 'src/**'
      - '.github/workflows/pr.yml'
      - 'package.json'
      - 'bun.lock'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: 'pr-workflow-${{ github.head_ref }}'
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.3.0

      - name: Cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Lint
        run: bun run lint

      - name: Format check
        run: bun run format:check

      - name: Test
        run: bun test
        env:
          CI: true

      - name: Type check
        run: bun run type

      - name: Build
        run: bun run build:prod

  storybook-test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.3.0

      - name: Cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright
        run: bunx playwright install --with-deps

      - name: Build Storybook
        run: bun run build-storybook --quiet

      - name: Serve Storybook and run tests
        run: |
          bunx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
            "bunx http-server storybook-static --port 6006 --silent" \
            "bunx wait-on tcp:6006 && bun run test-storybook"
